version: "3"

dotenv: [".env"]

tasks:
  run:
    desc: Build and run the rust binary.
    deps: [database-up]
    cmd: cargo run

  container-run:
    desc: Run application in the docker or podman container. It will also start up the database.
    deps: [database-up]
    dir: "{{.USER_WORKING_DIR}}/containers"
    aliases: [crun]
    cmd: bash -c "$RUNNER-compose -f service.yml up -d --no-deps --build"

  container-stop:
    desc: Stop docker or podman container with running application.
    dir: "{{.USER_WORKING_DIR}}/containers"
    aliases: [cstop]
    cmd: bash -c "$RUNNER-compose -f service.yml down"

  database-up:
    desc: Create the database container throw docker or podman.
    dir: "{{.USER_WORKING_DIR}}/containers"
    aliases: [db]
    cmds:
      - bash -c "$RUNNER-compose -f database.yml up -d"
      - sleep 2
      - task: migrate

  database-down:
    desc: Drop the database container throw docker or podman.
    dir: "{{.USER_WORKING_DIR}}/containers"
    aliases: [dbd]
    cmd: bash -c "$RUNNER-compose -f database.yml down"

  migrate:
    desc: Migrate database.
    dir: "{{.USER_WORKING_DIR}}"
    aliases: [mg]
    env:
      POSTGRES_URL: postgres://{{.POSTGRES_USER}}:{{.POSTGRES_PASSWORD}}@{{.POSTGRES_HOST}}:{{.POSTGRES_PORT}}/{{.POSTGRES_DB}}
    cmds:
      - cargo install sea-orm-cli
      - sea-orm-cli migrate -u $POSTGRES_URL -s public
      - sea-orm-cli generate entity -u $POSTGRES_URL -s public --with-serde both --expanded-format -o src/database/structs

  lint:
    desc: Runs clippy
    cmd: cargo clippy --all-features --all-targets

  lint-fix:
    desc: Runs clippy
    aliases: [lf]
    cmds:
      - cargo clippy --all-features --all-targets --fix
      - cd migration && cargo clippy --fix

  format:
    desc: Auto formating rust code
    aliases: [fmt]
    cmd: cargo fmt

  upgrade-libraries:
    desc: Upgrades all libraries that used on the project
    aliases: [upgr]
    cmds:
      - cargo install cargo-edit
      - cargo upgrade --incompatible

  test:
    desc: Run tests.
    cmds:
      - cargo install cargo-nextest --locked
      - cargo nextest run

  covarage-test:
    desc: Run tests.
    aliases: [ctest]
    cmds:
      - cargo install cargo-nextest --locked
      - cargo install cargo-llvm-cov
      - cargo llvm-cov nextest
